1/26/23
for octal conversion, group by 3 bits,0's are 0's, but 1's should be added up like 2^3 * 1 + 1*2^4

TO RUN IN C
cc filename.c -o filename
./filename

printf("%o\n", 43); //octal conversion in C

1. Convert 43 to unsigned 8-bit binary representation.
00101011

2. Convert the answer to the first part to Octal.
53
3. Convert the answer to the first part to Hexadecimal.
0X2B
4. Convert -43 to two's complement binary representation.
11010100
As for ucu, -ask how to pay secured card 

5. Convert -43 to sign-magnitude representation.

6. Convert the answer to parts four and five to Octal and Hexadecimal

7. Find the 32-bit representation of the following MIPS instructions. Convert the representation to Hexadecimal.

    a) add $t0, $s2, $s6

    b) lw $t3, -12($t1)

    c) addi $s1, $s2, 3
    
 -----------------------------------------------------------------------------
    1/31/23 
    r-format instructions -> 3 registers
    (op, rs,rt,rd,func)
    i-fromat instructions-> 2 registers
    (op, rs & rt, constant or address)

add $s4, $s3, $t7
$s3 is rs and has value of 19 as $s0 starts at 16
same applies to rest of registers^
-----------------------------------------------------------------------------
binary shortcut
1.# u wanna convert subtract it by greatest factor of 2 and then put 1 next to it.
2.repeat until no remainder
ex: 9 in binary
base 2's up to nine
1-->1-1= 0 so its 1
2-->no good so its 0
4--> 1-4 is negative no good so its 0
8 --> put a 1 next to it cuz it works 8-9 now we got a 1 and this row is 1

so now we got 1001 in binary to represent 9
-----------------------------------------------------------------------------

addi $t2, $t5, -12

lw $s1, -10($t1)

sw $s1, -10($t1)

